generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model investmentproduct {
  id                 Int              @id @default(autoincrement())
  codigo_produto     String           @unique(map: "codigo_produto") @db.VarChar(50)
  nome_produto       String           @db.VarChar(200)
  tipo_produto       String           @db.VarChar(20)
  descricao          String?          @db.Text
  moeda              String           @default("BRL") @db.Char(3)
  taxa_administracao Decimal?         @db.Decimal(5, 2)
  userinvestment     userinvestment[]
}

model investmentreturn {
  id                    Int            @id @default(autoincrement())
  user_investment_id    Int
  data_referencia       DateTime       @db.Date
  valor_fechamento      Decimal        @db.Decimal(20, 2)
  rentabilidade_periodo Decimal?       @db.Decimal(10, 4)
  custo_total_periodo   Decimal?       @db.Decimal(20, 2)
  userinvestment        userinvestment @relation(fields: [user_investment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "investmentreturn_ibfk_1")

  @@unique([user_investment_id, data_referencia], name: "user_investment_id_data_referencia")
  @@index([user_investment_id], map: "user_investment_id")
}

model portfolio {
  id             Int               @id @default(autoincrement())
  user_id        Int
  nome_carteira  String            @db.VarChar(100)
  data_criacao   DateTime          @default(now()) @db.DateTime(0)
  icon           String?           @db.VarChar(255)    // <-- novo campo
  user           user              @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "portfolio_ibfk_1")
  userinvestment userinvestment[]

  @@index([user_id], map: "user_id")
}

model sessions {
  ses_id              Int       @id @default(autoincrement())
  ses_key             String?   @db.VarChar(40)
  ses_ip              String?   @db.VarChar(20)
  ses_location        String?   @db.VarChar(40)
  ses_city            String?   @db.VarChar(100)
  ses_state           String?   @db.VarChar(100)
  ses_country         String?   @db.VarChar(20)
  ses_timezone        String?   @db.VarChar(100)
  ses_status          Int       @default(1)
  ses_company         Int?
  ses_created_at      DateTime  @default(now()) @db.DateTime(0)
  ses_expiration_date DateTime? @db.DateTime(0)
  ses_client          Int       @default(1)
  ses_user            Int
  user                user      @relation(fields: [ses_user], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "sessions_ibfk_1")

  @@index([ses_user], map: "ses_user")
}

model transaction {
  id                 Int            @id @default(autoincrement())
  user_investment_id Int
  tipo               String         @db.VarChar(20)
  data_transacao     DateTime       @default(now()) @db.DateTime(0)
  quantidade         Decimal        @db.Decimal(20, 8)
  valor_unitario     Decimal        @db.Decimal(20, 8)
  valor_total        Decimal        @db.Decimal(20, 2)
  taxas              Decimal        @default(0.00) @db.Decimal(20, 2)
  observacoes        String?        @db.Text
  userinvestment     userinvestment @relation(fields: [user_investment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "transaction_ibfk_1")

  @@index([user_investment_id], map: "user_investment_id")
}

model user {
  id            Int          @id @default(autoincrement())
  first_name    String       @db.VarChar(100)
  last_name     String       @db.VarChar(100)
  email         String       @unique(map: "email") @db.VarChar(255)
  password_hash String       @db.VarChar(255)
  date_of_birth DateTime?    @db.Date
  data_criacao  DateTime     @default(now()) @db.DateTime(0)
  ultimo_login  DateTime?    @db.DateTime(0)
  portfolio     portfolio[]
  sessions      sessions[]
  userprofile   userprofile?
}

model userinvestment {
  id                      Int                @id @default(autoincrement())
  portfolio_id            Int
  investment_product_id   Int
  data_inicio             DateTime           @db.Date
  quantidade              Decimal            @db.Decimal(20, 8)
  custo_total             Decimal            @db.Decimal(20, 2)
  valor_unitario_medio    Decimal            @db.Decimal(20, 8)
  status                  String             @db.VarChar(20)
  data_ultima_atualizacao DateTime           @default(now()) @db.DateTime(0)
  investmentreturn        investmentreturn[]
  transaction             transaction[]
  portfolio               portfolio          @relation(fields: [portfolio_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "userinvestment_ibfk_1")
  investmentproduct       investmentproduct  @relation(fields: [investment_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "userinvestment_ibfk_2")

  @@index([investment_product_id], map: "investment_product_id")
  @@index([portfolio_id], map: "portfolio_id")
}

model userprofile {
  id                Int      @id @default(autoincrement())
  user_id           Int      @unique(map: "user_id")
  idade             Int?
  profissao         String?  @db.VarChar(100)
  perfil_risco      String   @db.VarChar(20)
  objetivo_primario String?  @db.VarChar(100)
  renda_mensal      Decimal? @db.Decimal(15, 2)
  patrimonio_atual  Decimal? @db.Decimal(20, 2)
  data_atualizacao  DateTime @default(now()) @db.DateTime(0)
  user              user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "userprofile_ibfk_1")
}
